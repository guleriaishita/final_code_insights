{
  "nodes": {
    "Method": {
      "0": {
        "name": "clear_batch",
        "details": {
          "docstring": "Reset the current batch of data.",
          "is_abstract": false,
          "decorators": "",
          "name": "clear_batch",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "4": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,message",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "44": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,files_input",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "45": {
        "name": "parse_files",
        "details": {
          "docstring": "Parse files based on the input type.",
          "is_abstract": false,
          "decorators": "",
          "name": "parse_files",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "46": {
        "name": "_parse_repository_files",
        "details": {
          "docstring": "Parse all relevant files from a repository.",
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_repository_files",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,repo_path",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "47": {
        "name": "_parse_individual_files",
        "details": {
          "docstring": "Parse specific files provided.",
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_individual_files",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,file_paths",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "48": {
        "name": "analyze_code_patterns",
        "details": {
          "docstring": "Analyze code for patterns and conventions.",
          "is_abstract": false,
          "decorators": "",
          "name": "analyze_code_patterns",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "61": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,repo_path",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "62": {
        "name": "_analyze_repository",
        "details": {
          "docstring": "Analyze the repository structure and contents.",
          "is_abstract": false,
          "decorators": "",
          "name": "_analyze_repository",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "63": {
        "name": "_analyze_file",
        "details": {
          "docstring": "Analyze individual files based on their type.",
          "is_abstract": false,
          "decorators": "",
          "name": "_analyze_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,file_path",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "64": {
        "name": "_parse_python_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_python_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "65": {
        "name": "_parse_java_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_java_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "66": {
        "name": "_parse_javascript_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_javascript_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "67": {
        "name": "_parse_json_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_json_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "68": {
        "name": "_parse_xml_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_xml_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "69": {
        "name": "_parse_cpp_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_cpp_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "70": {
        "name": "_parse_csharp_file",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "_parse_csharp_file",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,content",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "71": {
        "name": "generate_summary_report",
        "details": {
          "docstring": "Generate a summary report of the repository analysis.",
          "is_abstract": false,
          "decorators": "",
          "name": "generate_summary_report",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "94": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 4,
          "is_property": false,
          "parameters": "self,manufacturer,model,year",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "95": {
        "name": "mileage",
        "details": {
          "docstring": "Set current mileage",
          "is_abstract": false,
          "decorators": "",
          "name": "mileage",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,value",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "96": {
        "name": "start_engine",
        "details": {
          "docstring": "Start the vehicle's engine",
          "is_abstract": true,
          "decorators": "abstractmethod",
          "name": "start_engine",
          "parameter_count": 1,
          "is_property": false,
          "returns": "bool",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "97": {
        "name": "mileage",
        "details": {
          "docstring": "Get current mileage",
          "is_abstract": false,
          "decorators": "property",
          "name": "mileage",
          "parameter_count": 1,
          "is_property": true,
          "returns": "float",
          "parameters": "self",
          "method_type": "properties",
          "has_return_type": true
        }
      },
      "99": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 5,
          "is_property": false,
          "parameters": "self,manufacturer,model,year,num_doors",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "100": {
        "name": "start_engine",
        "details": {
          "docstring": "Implementation of abstract method",
          "is_abstract": false,
          "decorators": "",
          "name": "start_engine",
          "parameter_count": 1,
          "is_property": false,
          "returns": "bool",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "101": {
        "name": "add_maintenance_record",
        "details": {
          "docstring": "Add a maintenance record",
          "is_abstract": false,
          "decorators": "",
          "name": "add_maintenance_record",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,service_type",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "103": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 5,
          "is_property": false,
          "parameters": "self,manufacturer,model,year,has_sidecar",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "104": {
        "name": "start_engine",
        "details": {
          "docstring": "Implementation of abstract method",
          "is_abstract": false,
          "decorators": "",
          "name": "start_engine",
          "parameter_count": 1,
          "is_property": false,
          "returns": "bool",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "106": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "107": {
        "name": "add_vehicle",
        "details": {
          "docstring": "Add a vehicle to the fleet",
          "is_abstract": false,
          "decorators": "",
          "name": "add_vehicle",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,vehicle",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "108": {
        "name": "get_vehicle_count",
        "details": {
          "docstring": "Get total number of vehicles",
          "is_abstract": false,
          "decorators": "",
          "name": "get_vehicle_count",
          "parameter_count": 1,
          "is_property": false,
          "returns": "int",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "117": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "118": {
        "name": "add_car",
        "details": {
          "docstring": "Add a car to the fleet",
          "is_abstract": false,
          "decorators": "",
          "name": "add_car",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,car",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "120": {
        "name": "add_motorcycle",
        "details": {
          "docstring": "Add a motorcycle to the fleet",
          "is_abstract": false,
          "decorators": "",
          "name": "add_motorcycle",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,motorcycle",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "121": {
        "name": "add_maintenance_record",
        "details": {
          "docstring": "Add a maintenance record",
          "is_abstract": false,
          "decorators": "",
          "name": "add_maintenance_record",
          "parameter_count": 6,
          "is_property": false,
          "parameters": "self,vehicle_id,service_type,cost,technician,notes",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "122": {
        "name": "get_fleet_statistics",
        "details": {
          "docstring": "Get statistics about the fleet",
          "is_abstract": false,
          "decorators": "",
          "name": "get_fleet_statistics",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "145": {
        "name": "__str__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__str__",
          "parameter_count": 1,
          "is_property": false,
          "returns": "str",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "150": {
        "name": "draw",
        "details": {
          "is_abstract": true,
          "decorators": "abstractmethod",
          "name": "draw",
          "parameter_count": 1,
          "is_property": false,
          "returns": "str",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "152": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,color",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "153": {
        "name": "calculate_area",
        "details": {
          "is_abstract": true,
          "decorators": "abstractmethod",
          "name": "calculate_area",
          "parameter_count": 1,
          "is_property": false,
          "returns": "float",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "154": {
        "name": "draw",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "draw",
          "parameter_count": 1,
          "is_property": false,
          "returns": "str",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "155": {
        "name": "area",
        "details": {
          "is_abstract": false,
          "decorators": "property",
          "name": "area",
          "parameter_count": 1,
          "is_property": true,
          "returns": "float",
          "parameters": "self",
          "method_type": "properties",
          "has_return_type": true
        }
      },
      "157": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 3,
          "is_property": false,
          "parameters": "self,radius,color",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "158": {
        "name": "calculate_area",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "calculate_area",
          "parameter_count": 1,
          "is_property": false,
          "returns": "float",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "159": {
        "name": "draw",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "draw",
          "parameter_count": 1,
          "is_property": false,
          "returns": "str",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "161": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 4,
          "is_property": false,
          "parameters": "self,width,height,color",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "162": {
        "name": "calculate_area",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "calculate_area",
          "parameter_count": 1,
          "is_property": false,
          "returns": "float",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "163": {
        "name": "draw",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "draw",
          "parameter_count": 1,
          "is_property": false,
          "returns": "str",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "165": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 3,
          "is_property": false,
          "parameters": "self,width,height",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "166": {
        "name": "add_shape",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "add_shape",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,shape",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "167": {
        "name": "remove_shape",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "remove_shape",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,shape",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "168": {
        "name": "draw_all",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "draw_all",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "170": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,name",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "171": {
        "name": "add_shape",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "add_shape",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,shape",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "172": {
        "name": "remove_shape",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "remove_shape",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,shape",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "173": {
        "name": "get_total_area",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "get_total_area",
          "parameter_count": 1,
          "is_property": false,
          "returns": "float",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "175": {
        "name": "get_color_info",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "get_color_info",
          "parameter_count": 1,
          "is_property": false,
          "returns": "str",
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "254": {
        "name": "__init__",
        "details": {
          "docstring": "Initialize the prompt loader with the path to the TOML file.\n\nArgs:\n    toml_path (str): Path to the TOML configuration file",
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,toml_path",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "255": {
        "name": "_load_prompts",
        "details": {
          "docstring": "Load and parse prompts from the TOML file.\n\nReturns:\n    Dict[str, Any]: Parsed TOML content\n    \nRaises:\n    FileNotFoundError: If the TOML file doesn't exist\n    toml.TomlDecodeError: If the TOML file is invalid",
          "is_abstract": false,
          "decorators": "",
          "name": "_load_prompts",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "256": {
        "name": "get_prompt",
        "details": {
          "docstring": "Get a prompt template and fill it with the provided kwargs.\n\nArgs:\n    prompt_type (str): The type of prompt to retrieve\n    default (Optional[str]): Default template to use if prompt_type not found\n    **kwargs: Keyword arguments to fill the template\n    \nReturns:\n    str: The filled prompt template\n    \nRaises:\n    KeyError: If prompt_type not found and no default provided\n    ValueError: If template substitution fails",
          "is_abstract": false,
          "decorators": "",
          "name": "get_prompt",
          "parameter_count": 3,
          "is_property": false,
          "returns": "str",
          "parameters": "self,prompt_type,default",
          "method_type": "methods",
          "has_return_type": true
        }
      },
      "257": {
        "name": "get_section",
        "details": {
          "docstring": "Get a specific section from the TOML file.\n\nArgs:\n    section_name (str): Name of the section to retrieve\n    \nReturns:\n    Dict[str, Any]: The requested section content\n    \nRaises:\n    KeyError: If section not found",
          "is_abstract": false,
          "decorators": "",
          "name": "get_section",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,section_name",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "258": {
        "name": "reload_prompts",
        "details": {
          "docstring": "Reload prompts from the TOML file.\nUseful when the underlying file has been modified.",
          "is_abstract": false,
          "decorators": "",
          "name": "reload_prompts",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "275": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "self,name",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "276": {
        "name": "display",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "display",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "278": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 3,
          "is_property": false,
          "parameters": "self,name,parent_name",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "279": {
        "name": "display",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "display",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "281": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 4,
          "is_property": false,
          "parameters": "self,name,parent_name,grandparent_name",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "282": {
        "name": "display",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "display",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "484": {
        "name": "__init__",
        "details": {
          "docstring": "Initialize database connector with connection parameters.\n\nArgs:\n    host (str): Database host address\n    username (str): Database username\n    password (str): Database password",
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 4,
          "is_property": false,
          "parameters": "self,host,username,password",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "485": {
        "name": "validate_credentials",
        "details": {
          "docstring": "Validate the provided credentials.\n\nArgs:\n    username (str): Username to validate\n    password (str): Password to validate\n    \nReturns:\n    bool: True if credentials are valid, False otherwise",
          "is_abstract": false,
          "decorators": "staticmethod",
          "name": "validate_credentials",
          "parameter_count": 2,
          "is_property": false,
          "parameters": "username,password",
          "method_type": "static_methods",
          "has_return_type": false
        }
      },
      "486": {
        "name": "connection_string",
        "details": {
          "docstring": "Returns the formatted connection string.",
          "is_abstract": false,
          "decorators": "property",
          "name": "connection_string",
          "parameter_count": 1,
          "is_property": true,
          "parameters": "self",
          "method_type": "properties",
          "has_return_type": false
        }
      },
      "490": {
        "name": "__init__",
        "details": {
          "is_abstract": false,
          "decorators": "",
          "name": "__init__",
          "parameter_count": 1,
          "is_property": false,
          "parameters": "self",
          "method_type": "methods",
          "has_return_type": false
        }
      },
      "491": {
        "name": "process_data",
        "details": {
          "docstring": "Process the input data using specified mode.\n\nArgs:\n    data (list): Data to process\n    mode (str): Processing mode to use\n    \nReturns:\n    list: Processed data",
          "is_abstract": false,
          "decorators": "",
          "name": "process_data",
          "parameter_count": 3,
          "is_property": false,
          "parameters": "self,data,mode",
          "method_type": "methods",
          "has_return_type": false
        }
      }
    },
    "ClassAttribute": {
      "1": {
        "name": "BATCH_SIZE",
        "details": {
          "has_type_annotation": false,
          "name": "BATCH_SIZE"
        }
      },
      "2": {
        "name": "PROCESSING_MODES",
        "details": {
          "has_type_annotation": false,
          "name": "PROCESSING_MODES"
        }
      },
      "110": {
        "name": "vehicle_id",
        "details": {
          "has_type_annotation": true,
          "type_hint": "str",
          "name": "vehicle_id"
        }
      },
      "111": {
        "name": "service_date",
        "details": {
          "has_type_annotation": true,
          "type_hint": "datetime",
          "name": "service_date"
        }
      },
      "112": {
        "name": "service_type",
        "details": {
          "has_type_annotation": true,
          "type_hint": "str",
          "name": "service_type"
        }
      },
      "113": {
        "name": "cost",
        "details": {
          "has_type_annotation": true,
          "type_hint": "float",
          "name": "cost"
        }
      },
      "114": {
        "name": "technician",
        "details": {
          "has_type_annotation": true,
          "type_hint": "str",
          "name": "technician"
        }
      },
      "115": {
        "name": "notes",
        "details": {
          "has_type_annotation": false,
          "name": "notes"
        }
      },
      "146": {
        "name": "red",
        "details": {
          "has_type_annotation": true,
          "type_hint": "int",
          "name": "red"
        }
      },
      "147": {
        "name": "green",
        "details": {
          "has_type_annotation": true,
          "type_hint": "int",
          "name": "green"
        }
      },
      "148": {
        "name": "blue",
        "details": {
          "has_type_annotation": true,
          "type_hint": "int",
          "name": "blue"
        }
      },
      "487": {
        "name": "connection_pool",
        "details": {
          "has_type_annotation": false,
          "name": "connection_pool"
        }
      },
      "488": {
        "name": "DEFAULT_PORT",
        "details": {
          "has_type_annotation": false,
          "name": "DEFAULT_PORT"
        }
      }
    },
    "Class": {
      "3": {
        "name": "CustomError",
        "details": {
          "docstring": "Custom error class for specific error handling.",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "CustomError",
          "total_methods": 1
        }
      },
      "43": {
        "name": "CodebaseAnalyzer",
        "details": {
          "total_attributes": 0,
          "is_abstract": false,
          "name": "CodebaseAnalyzer",
          "total_methods": 5
        }
      },
      "60": {
        "name": "RepositoryAnalyzer",
        "details": {
          "total_attributes": 0,
          "is_abstract": false,
          "name": "RepositoryAnalyzer",
          "total_methods": 11
        }
      },
      "93": {
        "name": "Vehicle",
        "details": {
          "docstring": "Base class for all vehicles",
          "total_attributes": 0,
          "is_abstract": true,
          "name": "Vehicle",
          "total_methods": 3
        }
      },
      "98": {
        "name": "Car",
        "details": {
          "docstring": "Car implementation of Vehicle",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Car",
          "total_methods": 3
        }
      },
      "102": {
        "name": "Motorcycle",
        "details": {
          "docstring": "Motorcycle implementation of Vehicle",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Motorcycle",
          "total_methods": 2
        }
      },
      "105": {
        "name": "Fleet",
        "details": {
          "docstring": "Generic container for managing vehicle fleets",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Fleet",
          "total_methods": 3
        }
      },
      "109": {
        "name": "MaintenanceRecord",
        "details": {
          "docstring": "Maintenance record data class",
          "total_attributes": 6,
          "is_abstract": false,
          "name": "MaintenanceRecord",
          "total_methods": 0
        }
      },
      "116": {
        "name": "FleetManagementSystem",
        "details": {
          "docstring": "System for managing vehicle fleets",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "FleetManagementSystem",
          "total_methods": 5
        }
      },
      "144": {
        "name": "Color",
        "details": {
          "docstring": "Represents a color using RGB values",
          "total_attributes": 3,
          "is_abstract": false,
          "name": "Color",
          "total_methods": 1
        }
      },
      "149": {
        "name": "Drawable",
        "details": {
          "docstring": "Interface for drawable objects",
          "total_attributes": 0,
          "is_abstract": true,
          "name": "Drawable",
          "total_methods": 1
        }
      },
      "151": {
        "name": "Shape",
        "details": {
          "docstring": "Base class for all shapes",
          "total_attributes": 0,
          "is_abstract": true,
          "name": "Shape",
          "total_methods": 3
        }
      },
      "156": {
        "name": "Circle",
        "details": {
          "docstring": "Circle shape with radius",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Circle",
          "total_methods": 3
        }
      },
      "160": {
        "name": "Rectangle",
        "details": {
          "docstring": "Rectangle shape with width and height",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Rectangle",
          "total_methods": 3
        }
      },
      "164": {
        "name": "Canvas",
        "details": {
          "docstring": "Canvas that contains and owns shapes",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Canvas",
          "total_methods": 4
        }
      },
      "169": {
        "name": "ShapeGroup",
        "details": {
          "docstring": "Group that references but doesn't own shapes",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "ShapeGroup",
          "total_methods": 4
        }
      },
      "174": {
        "name": "ColoredRectangle",
        "details": {
          "docstring": "Rectangle with additional color-specific functionality",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "ColoredRectangle",
          "total_methods": 1
        }
      },
      "194": {
        "name": "PromptLoader",
        "details": {
          "docstring": "A class to load and manage prompts from TOML configuration files.\nHandles template substitution and section retrieval with proper error handling.",
          "total_attributes": 0,
          "is_abstract": false,
          "name": "PromptLoader",
          "total_methods": 5
        }
      },
      "274": {
        "name": "Grandparent",
        "details": {
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Grandparent",
          "total_methods": 2
        }
      },
      "277": {
        "name": "Parent",
        "details": {
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Parent",
          "total_methods": 2
        }
      },
      "280": {
        "name": "Child",
        "details": {
          "total_attributes": 0,
          "is_abstract": false,
          "name": "Child",
          "total_methods": 2
        }
      },
      "483": {
        "name": "DatabaseConnector",
        "details": {
          "docstring": "A class to handle database connections and operations.\nDemonstrates class-level documentation and various Python features.",
          "total_attributes": 2,
          "is_abstract": false,
          "name": "DatabaseConnector",
          "total_methods": 2
        }
      },
      "489": {
        "name": "DataProcessor",
        "details": {
          "docstring": "Class for processing and transforming data.\nContains multiple methods and class attributes.",
          "total_attributes": 2,
          "is_abstract": false,
          "name": "DataProcessor",
          "total_methods": 3
        }
      }
    },
    "Function": {
      "5": {
        "name": "connect_to_database",
        "details": {
          "docstring": "Standalone function to establish database connection.\n\nArgs:\n    host (str): Database host address\n    retries (int): Number of connection retries\n    \nReturns:\n    bool: True if connection successful, False otherwise",
          "decorators": "",
          "name": "connect_to_database",
          "parameter_count": 2,
          "parameters": "host,retries",
          "has_return_type": false
        }
      },
      "6": {
        "name": "format_data",
        "details": {
          "docstring": "Format the input data into specified format.\n\nArgs:\n    data (dict): Data to format\n    output_format (str): Desired output format\n    \nReturns:\n    str: Formatted data string",
          "decorators": "",
          "name": "format_data",
          "parameter_count": 2,
          "parameters": "data,output_format",
          "has_return_type": false
        }
      },
      "7": {
        "name": "initialize_system",
        "details": {
          "docstring": "System initialization function.\nReturns success status of initialization.",
          "decorators": "",
          "name": "initialize_system",
          "parameter_count": 0,
          "parameters": "",
          "has_return_type": false
        }
      },
      "8": {
        "name": "__init__",
        "details": {
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "parameters": "self,message",
          "has_return_type": false
        }
      },
      "9": {
        "name": "connection_string",
        "details": {
          "docstring": "Returns the formatted connection string.",
          "decorators": "property",
          "name": "connection_string",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "10": {
        "name": "validate_credentials",
        "details": {
          "docstring": "Validate the provided credentials.\n\nArgs:\n    username (str): Username to validate\n    password (str): Password to validate\n    \nReturns:\n    bool: True if credentials are valid, False otherwise",
          "decorators": "staticmethod",
          "name": "validate_credentials",
          "parameter_count": 2,
          "parameters": "username,password",
          "has_return_type": false
        }
      },
      "11": {
        "name": "process_data",
        "details": {
          "docstring": "Process the input data using specified mode.\n\nArgs:\n    data (list): Data to process\n    mode (str): Processing mode to use\n    \nReturns:\n    list: Processed data",
          "decorators": "",
          "name": "process_data",
          "parameter_count": 3,
          "parameters": "self,data,mode",
          "has_return_type": false
        }
      },
      "12": {
        "name": "clear_batch",
        "details": {
          "docstring": "Reset the current batch of data.",
          "decorators": "",
          "name": "clear_batch",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "49": {
        "name": "__init__",
        "details": {
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "parameters": "self,files_input",
          "has_return_type": false
        }
      },
      "50": {
        "name": "parse_files",
        "details": {
          "docstring": "Parse files based on the input type.",
          "decorators": "",
          "name": "parse_files",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "51": {
        "name": "_parse_repository_files",
        "details": {
          "docstring": "Parse all relevant files from a repository.",
          "decorators": "",
          "name": "_parse_repository_files",
          "parameter_count": 2,
          "parameters": "self,repo_path",
          "has_return_type": false
        }
      },
      "52": {
        "name": "_parse_individual_files",
        "details": {
          "docstring": "Parse specific files provided.",
          "decorators": "",
          "name": "_parse_individual_files",
          "parameter_count": 2,
          "parameters": "self,file_paths",
          "has_return_type": false
        }
      },
      "53": {
        "name": "analyze_code_patterns",
        "details": {
          "docstring": "Analyze code for patterns and conventions.",
          "decorators": "",
          "name": "analyze_code_patterns",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "72": {
        "name": "__init__",
        "details": {
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "parameters": "self,repo_path",
          "has_return_type": false
        }
      },
      "73": {
        "name": "_analyze_repository",
        "details": {
          "docstring": "Analyze the repository structure and contents.",
          "decorators": "",
          "name": "_analyze_repository",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "74": {
        "name": "_analyze_file",
        "details": {
          "docstring": "Analyze individual files based on their type.",
          "decorators": "",
          "name": "_analyze_file",
          "parameter_count": 2,
          "parameters": "self,file_path",
          "has_return_type": false
        }
      },
      "75": {
        "name": "_parse_python_file",
        "details": {
          "decorators": "",
          "name": "_parse_python_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "76": {
        "name": "_parse_java_file",
        "details": {
          "decorators": "",
          "name": "_parse_java_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "77": {
        "name": "_parse_javascript_file",
        "details": {
          "decorators": "",
          "name": "_parse_javascript_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "78": {
        "name": "_parse_json_file",
        "details": {
          "decorators": "",
          "name": "_parse_json_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "79": {
        "name": "_parse_xml_file",
        "details": {
          "decorators": "",
          "name": "_parse_xml_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "80": {
        "name": "_parse_cpp_file",
        "details": {
          "decorators": "",
          "name": "_parse_cpp_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "81": {
        "name": "_parse_csharp_file",
        "details": {
          "decorators": "",
          "name": "_parse_csharp_file",
          "parameter_count": 2,
          "parameters": "self,content",
          "has_return_type": false
        }
      },
      "82": {
        "name": "generate_summary_report",
        "details": {
          "docstring": "Generate a summary report of the repository analysis.",
          "decorators": "",
          "name": "generate_summary_report",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "123": {
        "name": "__init__",
        "details": {
          "decorators": "",
          "name": "__init__",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "124": {
        "name": "mileage",
        "details": {
          "docstring": "Set current mileage",
          "decorators": "",
          "name": "mileage",
          "parameter_count": 2,
          "parameters": "self,value",
          "has_return_type": false
        }
      },
      "125": {
        "name": "start_engine",
        "details": {
          "docstring": "Implementation of abstract method",
          "decorators": "",
          "name": "start_engine",
          "parameter_count": 1,
          "returns": "bool",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "126": {
        "name": "add_maintenance_record",
        "details": {
          "docstring": "Add a maintenance record",
          "decorators": "",
          "name": "add_maintenance_record",
          "parameter_count": 6,
          "parameters": "self,vehicle_id,service_type,cost,technician,notes",
          "has_return_type": false
        }
      },
      "127": {
        "name": "add_vehicle",
        "details": {
          "docstring": "Add a vehicle to the fleet",
          "decorators": "",
          "name": "add_vehicle",
          "parameter_count": 2,
          "parameters": "self,vehicle",
          "has_return_type": false
        }
      },
      "128": {
        "name": "get_vehicle_count",
        "details": {
          "docstring": "Get total number of vehicles",
          "decorators": "",
          "name": "get_vehicle_count",
          "parameter_count": 1,
          "returns": "int",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "129": {
        "name": "add_car",
        "details": {
          "docstring": "Add a car to the fleet",
          "decorators": "",
          "name": "add_car",
          "parameter_count": 2,
          "parameters": "self,car",
          "has_return_type": false
        }
      },
      "130": {
        "name": "add_motorcycle",
        "details": {
          "docstring": "Add a motorcycle to the fleet",
          "decorators": "",
          "name": "add_motorcycle",
          "parameter_count": 2,
          "parameters": "self,motorcycle",
          "has_return_type": false
        }
      },
      "131": {
        "name": "get_fleet_statistics",
        "details": {
          "docstring": "Get statistics about the fleet",
          "decorators": "",
          "name": "get_fleet_statistics",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "176": {
        "name": "main",
        "details": {
          "decorators": "",
          "name": "main",
          "parameter_count": 0,
          "parameters": "",
          "has_return_type": false
        }
      },
      "177": {
        "name": "__str__",
        "details": {
          "decorators": "",
          "name": "__str__",
          "parameter_count": 1,
          "returns": "str",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "178": {
        "name": "draw",
        "details": {
          "decorators": "",
          "name": "draw",
          "parameter_count": 1,
          "returns": "str",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "179": {
        "name": "__init__",
        "details": {
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "parameters": "self,name",
          "has_return_type": false
        }
      },
      "180": {
        "name": "area",
        "details": {
          "decorators": "property",
          "name": "area",
          "parameter_count": 1,
          "returns": "float",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "181": {
        "name": "calculate_area",
        "details": {
          "decorators": "",
          "name": "calculate_area",
          "parameter_count": 1,
          "returns": "float",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "182": {
        "name": "add_shape",
        "details": {
          "decorators": "",
          "name": "add_shape",
          "parameter_count": 2,
          "parameters": "self,shape",
          "has_return_type": false
        }
      },
      "183": {
        "name": "remove_shape",
        "details": {
          "decorators": "",
          "name": "remove_shape",
          "parameter_count": 2,
          "parameters": "self,shape",
          "has_return_type": false
        }
      },
      "184": {
        "name": "draw_all",
        "details": {
          "decorators": "",
          "name": "draw_all",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "185": {
        "name": "get_total_area",
        "details": {
          "decorators": "",
          "name": "get_total_area",
          "parameter_count": 1,
          "returns": "float",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "186": {
        "name": "get_color_info",
        "details": {
          "decorators": "",
          "name": "get_color_info",
          "parameter_count": 1,
          "returns": "str",
          "parameters": "self",
          "has_return_type": true
        }
      },
      "259": {
        "name": "__init__",
        "details": {
          "docstring": "Initialize the prompt loader with the path to the TOML file.\n\nArgs:\n    toml_path (str): Path to the TOML configuration file",
          "decorators": "",
          "name": "__init__",
          "parameter_count": 2,
          "parameters": "self,toml_path",
          "has_return_type": false
        }
      },
      "260": {
        "name": "_load_prompts",
        "details": {
          "docstring": "Load and parse prompts from the TOML file.\n\nReturns:\n    Dict[str, Any]: Parsed TOML content\n    \nRaises:\n    FileNotFoundError: If the TOML file doesn't exist\n    toml.TomlDecodeError: If the TOML file is invalid",
          "decorators": "",
          "name": "_load_prompts",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "261": {
        "name": "get_prompt",
        "details": {
          "docstring": "Get a prompt template and fill it with the provided kwargs.\n\nArgs:\n    prompt_type (str): The type of prompt to retrieve\n    default (Optional[str]): Default template to use if prompt_type not found\n    **kwargs: Keyword arguments to fill the template\n    \nReturns:\n    str: The filled prompt template\n    \nRaises:\n    KeyError: If prompt_type not found and no default provided\n    ValueError: If template substitution fails",
          "decorators": "",
          "name": "get_prompt",
          "parameter_count": 3,
          "returns": "str",
          "parameters": "self,prompt_type,default",
          "has_return_type": true
        }
      },
      "262": {
        "name": "get_section",
        "details": {
          "docstring": "Get a specific section from the TOML file.\n\nArgs:\n    section_name (str): Name of the section to retrieve\n    \nReturns:\n    Dict[str, Any]: The requested section content\n    \nRaises:\n    KeyError: If section not found",
          "decorators": "",
          "name": "get_section",
          "parameter_count": 2,
          "parameters": "self,section_name",
          "has_return_type": false
        }
      },
      "263": {
        "name": "reload_prompts",
        "details": {
          "docstring": "Reload prompts from the TOML file.\nUseful when the underlying file has been modified.",
          "decorators": "",
          "name": "reload_prompts",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "283": {
        "name": "__init__",
        "details": {
          "decorators": "",
          "name": "__init__",
          "parameter_count": 4,
          "parameters": "self,name,parent_name,grandparent_name",
          "has_return_type": false
        }
      },
      "284": {
        "name": "display",
        "details": {
          "decorators": "",
          "name": "display",
          "parameter_count": 1,
          "parameters": "self",
          "has_return_type": false
        }
      },
      "287": {
        "name": "connect_to_neo4j",
        "details": {
          "decorators": "",
          "name": "connect_to_neo4j",
          "parameter_count": 3,
          "parameters": "uri,username,password",
          "has_return_type": false
        }
      },
      "288": {
        "name": "detect_file_type",
        "details": {
          "decorators": "",
          "name": "detect_file_type",
          "parameter_count": 1,
          "parameters": "file_path",
          "has_return_type": false
        }
      },
      "289": {
        "name": "load_litellm_config",
        "details": {
          "decorators": "",
          "name": "load_litellm_config",
          "parameter_count": 1,
          "parameters": "yaml_path",
          "has_return_type": false
        }
      },
      "290": {
        "name": "determine_file_type",
        "details": {
          "decorators": "",
          "name": "determine_file_type",
          "parameter_count": 1,
          "parameters": "file_path",
          "has_return_type": false
        }
      },
      "291": {
        "name": "sanitize_input_content",
        "details": {
          "decorators": "",
          "name": "sanitize_input_content",
          "parameter_count": 1,
          "parameters": "content",
          "has_return_type": false
        }
      },
      "292": {
        "name": "ai_extract_compliance_sections",
        "details": {
          "decorators": "",
          "name": "ai_extract_compliance_sections",
          "parameter_count": 4,
          "parameters": "file_content,config,selected_model,provider",
          "has_return_type": false
        }
      },
      "293": {
        "name": "load_compliance_file",
        "details": {
          "decorators": "",
          "name": "load_compliance_file",
          "parameter_count": 4,
          "parameters": "compliance_file_path,config,selected_model,provider",
          "has_return_type": false
        }
      },
      "294": {
        "name": "generate_litellm_response",
        "details": {
          "decorators": "",
          "name": "generate_litellm_response",
          "parameter_count": 4,
          "parameters": "prompt,config,selected_model,provider",
          "has_return_type": false
        }
      },
      "295": {
        "name": "load_additional_files",
        "details": {
          "decorators": "",
          "name": "load_additional_files",
          "parameter_count": 1,
          "parameters": "file_paths",
          "has_return_type": false
        }
      },
      "296": {
        "name": "generate_comments_or_docstrings",
        "details": {
          "decorators": "",
          "name": "generate_comments_or_docstrings",
          "parameter_count": 5,
          "parameters": "file_snippet,selected_model,provider,config,compliance_sections",
          "has_return_type": false
        }
      },
      "297": {
        "name": "generate_documentation",
        "details": {
          "decorators": "",
          "name": "generate_documentation",
          "parameter_count": 7,
          "parameters": "file_snippet,selected_model,provider,config,compliance_sections,file_extension,file_type",
          "has_return_type": false
        }
      },
      "298": {
        "name": "review_code_from_file",
        "details": {
          "decorators": "",
          "name": "review_code_from_file",
          "parameter_count": 13,
          "parameters": "file_path,repository_details,design_patterns_path,best_practices_path,review_file_path,additional_file_paths,comments_file_path,documentation_file_path,selected_model,provider,config,repo_file_structure,compliance_file_path",
          "has_return_type": false
        }
      },
      "299": {
        "name": "generate_code_base_structure",
        "details": {
          "decorators": "",
          "name": "generate_code_base_structure",
          "parameter_count": 5,
          "parameters": "selected_model,provider,config,repository_details,compliance_sections",
          "has_return_type": false
        }
      },
      "300": {
        "name": "build_repository_knowledge_graph",
        "details": {
          "docstring": "Build a knowledge graph in Neo4j from repository structure details.\n\nArgs:\n    graph: py2neo.Graph instance connected to Neo4j\n    repository_details: Dictionary containing repository structure details",
          "decorators": "",
          "name": "build_repository_knowledge_graph",
          "parameter_count": 2,
          "parameters": "graph,repository_details",
          "has_return_type": false
        }
      },
      "376": {
        "name": "create_knowledge_graph",
        "details": {
          "docstring": "Create a Neo4j knowledge graph from repository details.\n\nArgs:\n    repository_details: Dictionary containing repository structure",
          "decorators": "",
          "name": "create_knowledge_graph",
          "parameter_count": 1,
          "parameters": "repository_details",
          "has_return_type": false
        }
      },
      "377": {
        "name": "generate_guidelines_document",
        "details": {
          "docstring": "Generate a comprehensive guidelines document from codebase analysis.\n\nArgs:\n    files_input (Dict[str, str]): Dictionary of input files\n    config (Dict[str, Any]): Configuration parameters\n    selected_model (str): Name of the selected AI model\n    provider (str): Name of the AI provider\n    \nReturns:\n    Optional[str]: Generated guidelines content or None if generation fails\n    \nRaises:\n    ValueError: If no valid files found to analyze",
          "decorators": "",
          "name": "generate_guidelines_document",
          "parameter_count": 4,
          "parameters": "files_input,config,selected_model,provider",
          "has_return_type": false
        }
      },
      "378": {
        "name": "main",
        "details": {
          "decorators": "",
          "name": "main",
          "parameter_count": 0,
          "parameters": "",
          "has_return_type": false
        }
      },
      "379": {
        "name": "process_directory",
        "details": {
          "docstring": "Recursively process directory and its contents",
          "decorators": "",
          "name": "process_directory",
          "parameter_count": 2,
          "parameters": "directory,parent_node",
          "has_return_type": false
        }
      }
    },
    "Import": {
      "13": {
        "name": "os",
        "details": {
          "name": "os",
          "is_relative": false,
          "base_package": "os"
        }
      },
      "14": {
        "name": "sys",
        "details": {
          "name": "sys",
          "is_relative": false,
          "base_package": "sys"
        }
      },
      "15": {
        "name": "datetime.datetime",
        "details": {
          "name": "datetime.datetime",
          "is_relative": false,
          "base_package": "datetime"
        }
      },
      "54": {
        "name": "base_analyzer.BaseAnalyzer",
        "details": {
          "name": "base_analyzer.BaseAnalyzer",
          "is_relative": false,
          "base_package": "base_analyzer"
        }
      },
      "55": {
        "name": "os",
        "details": {
          "name": "os",
          "is_relative": false,
          "base_package": "os"
        }
      },
      "56": {
        "name": "re",
        "details": {
          "name": "re",
          "is_relative": false,
          "base_package": "re"
        }
      },
      "57": {
        "name": "collections.defaultdict",
        "details": {
          "name": "collections.defaultdict",
          "is_relative": false,
          "base_package": "collections"
        }
      },
      "83": {
        "name": "base_analyzer.BaseAnalyzer",
        "details": {
          "name": "base_analyzer.BaseAnalyzer",
          "is_relative": false,
          "base_package": "base_analyzer"
        }
      },
      "84": {
        "name": "os",
        "details": {
          "name": "os",
          "is_relative": false,
          "base_package": "os"
        }
      },
      "85": {
        "name": "re",
        "details": {
          "name": "re",
          "is_relative": false,
          "base_package": "re"
        }
      },
      "86": {
        "name": "ast",
        "details": {
          "name": "ast",
          "is_relative": false,
          "base_package": "ast"
        }
      },
      "87": {
        "name": "json",
        "details": {
          "name": "json",
          "is_relative": false,
          "base_package": "json"
        }
      },
      "88": {
        "name": "javalang",
        "details": {
          "name": "javalang",
          "is_relative": false,
          "base_package": "javalang"
        }
      },
      "89": {
        "name": "esprima",
        "details": {
          "name": "esprima",
          "is_relative": false,
          "base_package": "esprima"
        }
      },
      "90": {
        "name": "xml.etree.ElementTree",
        "details": {
          "name": "xml.etree.ElementTree",
          "is_relative": false,
          "base_package": "xml"
        }
      },
      "132": {
        "name": "typing.List",
        "details": {
          "name": "typing.List",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "133": {
        "name": "typing.Dict",
        "details": {
          "name": "typing.Dict",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "134": {
        "name": "typing.Optional",
        "details": {
          "name": "typing.Optional",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "135": {
        "name": "typing.Union",
        "details": {
          "name": "typing.Union",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "136": {
        "name": "typing.TypeVar",
        "details": {
          "name": "typing.TypeVar",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "137": {
        "name": "typing.Generic",
        "details": {
          "name": "typing.Generic",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "138": {
        "name": "abc.ABC",
        "details": {
          "name": "abc.ABC",
          "is_relative": false,
          "base_package": "abc"
        }
      },
      "139": {
        "name": "abc.abstractmethod",
        "details": {
          "name": "abc.abstractmethod",
          "is_relative": false,
          "base_package": "abc"
        }
      },
      "140": {
        "name": "dataclasses.dataclass",
        "details": {
          "name": "dataclasses.dataclass",
          "is_relative": false,
          "base_package": "dataclasses"
        }
      },
      "141": {
        "name": "datetime.datetime",
        "details": {
          "name": "datetime.datetime",
          "is_relative": false,
          "base_package": "datetime"
        }
      },
      "187": {
        "name": "abc.ABC",
        "details": {
          "name": "abc.ABC",
          "is_relative": false,
          "base_package": "abc"
        }
      },
      "188": {
        "name": "abc.abstractmethod",
        "details": {
          "name": "abc.abstractmethod",
          "is_relative": false,
          "base_package": "abc"
        }
      },
      "189": {
        "name": "typing.List",
        "details": {
          "name": "typing.List",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "190": {
        "name": "typing.Optional",
        "details": {
          "name": "typing.Optional",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "191": {
        "name": "dataclasses.dataclass",
        "details": {
          "name": "dataclasses.dataclass",
          "is_relative": false,
          "base_package": "dataclasses"
        }
      },
      "264": {
        "name": "toml",
        "details": {
          "name": "toml",
          "is_relative": false,
          "base_package": "toml"
        }
      },
      "265": {
        "name": "pathlib.Path",
        "details": {
          "name": "pathlib.Path",
          "is_relative": false,
          "base_package": "pathlib"
        }
      },
      "266": {
        "name": "string.Template",
        "details": {
          "name": "string.Template",
          "is_relative": false,
          "base_package": "string"
        }
      },
      "267": {
        "name": "typing.Dict",
        "details": {
          "name": "typing.Dict",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "268": {
        "name": "typing.Any",
        "details": {
          "name": "typing.Any",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "269": {
        "name": "typing.Optional",
        "details": {
          "name": "typing.Optional",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "380": {
        "name": "litellm",
        "details": {
          "name": "litellm",
          "is_relative": false,
          "base_package": "litellm"
        }
      },
      "381": {
        "name": "yaml",
        "details": {
          "name": "yaml",
          "is_relative": false,
          "base_package": "yaml"
        }
      },
      "382": {
        "name": "re",
        "details": {
          "name": "re",
          "is_relative": false,
          "base_package": "re"
        }
      },
      "383": {
        "name": "os",
        "details": {
          "name": "os",
          "is_relative": false,
          "base_package": "os"
        }
      },
      "384": {
        "name": "xml.etree.ElementTree",
        "details": {
          "name": "xml.etree.ElementTree",
          "is_relative": false,
          "base_package": "xml"
        }
      },
      "385": {
        "name": "traceback",
        "details": {
          "name": "traceback",
          "is_relative": false,
          "base_package": "traceback"
        }
      },
      "386": {
        "name": "re",
        "details": {
          "name": "re",
          "is_relative": false,
          "base_package": "re"
        }
      },
      "387": {
        "name": "magic",
        "details": {
          "name": "magic",
          "is_relative": false,
          "base_package": "magic"
        }
      },
      "388": {
        "name": "dotenv.load_dotenv",
        "details": {
          "name": "dotenv.load_dotenv",
          "is_relative": false,
          "base_package": "dotenv"
        }
      },
      "468": {
        "name": "py2neo.Graph",
        "details": {
          "name": "py2neo.Graph",
          "is_relative": false,
          "base_package": "py2neo"
        }
      },
      "469": {
        "name": "py2neo.Node",
        "details": {
          "name": "py2neo.Node",
          "is_relative": false,
          "base_package": "py2neo"
        }
      },
      "470": {
        "name": "py2neo.Relationship",
        "details": {
          "name": "py2neo.Relationship",
          "is_relative": false,
          "base_package": "py2neo"
        }
      },
      "471": {
        "name": "os",
        "details": {
          "name": "os",
          "is_relative": false,
          "base_package": "os"
        }
      },
      "472": {
        "name": "typing.Dict",
        "details": {
          "name": "typing.Dict",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "473": {
        "name": "typing.Optional",
        "details": {
          "name": "typing.Optional",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "474": {
        "name": "typing.Any",
        "details": {
          "name": "typing.Any",
          "is_relative": false,
          "base_package": "typing"
        }
      },
      "475": {
        "name": "py2neo.errors.ClientError",
        "details": {
          "name": "py2neo.errors.ClientError",
          "is_relative": false,
          "base_package": "py2neo"
        }
      },
      "476": {
        "name": "py2neo.errors.DatabaseError",
        "details": {
          "name": "py2neo.errors.DatabaseError",
          "is_relative": false,
          "base_package": "py2neo"
        }
      },
      "477": {
        "name": "utils.prompt_loader.PromptLoader",
        "details": {
          "name": "utils.prompt_loader.PromptLoader",
          "is_relative": false,
          "base_package": "utils"
        }
      },
      "478": {
        "name": "utils.codebase_analyzer.CodebaseAnalyzer",
        "details": {
          "name": "utils.codebase_analyzer.CodebaseAnalyzer",
          "is_relative": false,
          "base_package": "utils"
        }
      },
      "479": {
        "name": "utils.base_analyzer.BaseAnalyzer",
        "details": {
          "name": "utils.base_analyzer.BaseAnalyzer",
          "is_relative": false,
          "base_package": "utils"
        }
      },
      "480": {
        "name": "utils.repository_analyzer.RepositoryAnalyzer",
        "details": {
          "name": "utils.repository_analyzer.RepositoryAnalyzer",
          "is_relative": false,
          "base_package": "utils"
        }
      }
    },
    "Repository": {
      "40": {
        "name": "/tmp/codebase/1737916104459",
        "details": {
          "name": "/tmp/codebase/1737916104459",
          "created_at": "2025-01-26 18:28:26.684339",
          "total_files": 39
        }
      }
    },
    "PythonFile": {
      "41": {
        "name": "codebase_analyzer.py",
        "details": {
          "import_count": 4,
          "name": "codebase_analyzer.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/codebase_analyzer.py",
          "has_functions": true,
          "size": 3877
        }
      },
      "58": {
        "name": "repository_analyzer.py",
        "details": {
          "import_count": 8,
          "name": "repository_analyzer.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/repository_analyzer.py",
          "has_functions": true,
          "size": 7528
        }
      },
      "91": {
        "name": "gggggg.py",
        "details": {
          "import_count": 10,
          "name": "gggggg.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/gggggg.py",
          "has_functions": true,
          "size": 5575
        }
      },
      "142": {
        "name": "classess.py",
        "details": {
          "import_count": 5,
          "name": "classess.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/classess.py",
          "has_functions": true,
          "size": 4393
        }
      },
      "192": {
        "name": "prompt_loader.py",
        "details": {
          "import_count": 6,
          "name": "prompt_loader.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/prompt_loader.py",
          "has_functions": true,
          "size": 4133
        }
      },
      "270": {
        "name": "setting.py",
        "details": {
          "import_count": 0,
          "name": "setting.py",
          "has_classes": false,
          "path": "/tmp/codebase/1737916104459/setting.py",
          "has_functions": false,
          "size": 0
        }
      },
      "272": {
        "name": "grandfamily.py",
        "details": {
          "import_count": 0,
          "name": "grandfamily.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/grandfamily.py",
          "has_functions": true,
          "size": 736
        }
      },
      "285": {
        "name": "main.py",
        "details": {
          "import_count": 22,
          "name": "main.py",
          "has_classes": false,
          "path": "/tmp/codebase/1737916104459/main.py",
          "has_functions": true,
          "size": 27982
        }
      },
      "481": {
        "name": "base_analyzer.py",
        "details": {
          "import_count": 3,
          "name": "base_analyzer.py",
          "has_classes": true,
          "path": "/tmp/codebase/1737916104459/base_analyzer.py",
          "has_functions": true,
          "size": 7726
        }
      }
    },
    "ModuleNamespace": {
      "42": {
        "name": "codebase_analyzer",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/codebase_analyzer.py",
          "name": "codebase_analyzer"
        }
      },
      "59": {
        "name": "repository_analyzer",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/repository_analyzer.py",
          "name": "repository_analyzer"
        }
      },
      "92": {
        "name": "gggggg",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/gggggg.py",
          "name": "gggggg"
        }
      },
      "143": {
        "name": "classess",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/classess.py",
          "name": "classess"
        }
      },
      "193": {
        "name": "prompt_loader",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/prompt_loader.py",
          "name": "prompt_loader"
        }
      },
      "271": {
        "name": "setting",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/setting.py",
          "name": "setting"
        }
      },
      "273": {
        "name": "grandfamily",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/grandfamily.py",
          "name": "grandfamily"
        }
      },
      "286": {
        "name": "main",
        "details": {
          "file_path": "/tmp/codebase/1737916104459/main.py",
          "name": "main"
        }
      },
      "482": {
        "name": "base_analyzer",
        "details": {
          "docstring": "This is a module-level docstring that demonstrates documentation at the module level.\nThis module contains sample code for testing the enhanced Python parser.",
          "file_path": "/tmp/codebase/1737916104459/base_analyzer.py",
          "name": "base_analyzer"
        }
      }
    }
  },
  "relationships": {
    "inheritance": [
      {
        "derived_id": "98",
        "derived_name": "Car",
        "base_id": "93",
        "base_name": "Vehicle",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "102",
        "derived_name": "Motorcycle",
        "base_id": "93",
        "base_name": "Vehicle",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "151",
        "derived_name": "Shape",
        "base_id": "149",
        "base_name": "Drawable",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "156",
        "derived_name": "Circle",
        "base_id": "149",
        "base_name": "Drawable",
        "is_direct": false,
        "inheritance_level": 2
      },
      {
        "derived_id": "156",
        "derived_name": "Circle",
        "base_id": "151",
        "base_name": "Shape",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "160",
        "derived_name": "Rectangle",
        "base_id": "149",
        "base_name": "Drawable",
        "is_direct": false,
        "inheritance_level": 2
      },
      {
        "derived_id": "160",
        "derived_name": "Rectangle",
        "base_id": "151",
        "base_name": "Shape",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "174",
        "derived_name": "ColoredRectangle",
        "base_id": "149",
        "base_name": "Drawable",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "174",
        "derived_name": "ColoredRectangle",
        "base_id": "151",
        "base_name": "Shape",
        "is_direct": false,
        "inheritance_level": 2
      },
      {
        "derived_id": "174",
        "derived_name": "ColoredRectangle",
        "base_id": "160",
        "base_name": "Rectangle",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "277",
        "derived_name": "Parent",
        "base_id": "274",
        "base_name": "Grandparent",
        "is_direct": true,
        "inheritance_level": 1
      },
      {
        "derived_id": "280",
        "derived_name": "Child",
        "base_id": "274",
        "base_name": "Grandparent",
        "is_direct": false,
        "inheritance_level": 2
      },
      {
        "derived_id": "280",
        "derived_name": "Child",
        "base_id": "277",
        "base_name": "Parent",
        "is_direct": true,
        "inheritance_level": 1
      }
    ],
    "method_overrides": [
      {
        "method": {
          "id": "99",
          "name": "__init__",
          "class": {
            "id": "98",
            "name": "Car"
          }
        },
        "overridden": {
          "method_id": "94",
          "method_name": "__init__",
          "class": {
            "id": "93",
            "name": "Vehicle"
          }
        }
      },
      {
        "method": {
          "id": "100",
          "name": "start_engine",
          "class": {
            "id": "98",
            "name": "Car"
          }
        },
        "overridden": {
          "method_id": "96",
          "method_name": "start_engine",
          "class": {
            "id": "93",
            "name": "Vehicle"
          }
        }
      },
      {
        "method": {
          "id": "103",
          "name": "__init__",
          "class": {
            "id": "102",
            "name": "Motorcycle"
          }
        },
        "overridden": {
          "method_id": "94",
          "method_name": "__init__",
          "class": {
            "id": "93",
            "name": "Vehicle"
          }
        }
      },
      {
        "method": {
          "id": "104",
          "name": "start_engine",
          "class": {
            "id": "102",
            "name": "Motorcycle"
          }
        },
        "overridden": {
          "method_id": "96",
          "method_name": "start_engine",
          "class": {
            "id": "93",
            "name": "Vehicle"
          }
        }
      },
      {
        "method": {
          "id": "154",
          "name": "draw",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        },
        "overridden": {
          "method_id": "150",
          "method_name": "draw",
          "class": {
            "id": "149",
            "name": "Drawable"
          }
        }
      },
      {
        "method": {
          "id": "157",
          "name": "__init__",
          "class": {
            "id": "156",
            "name": "Circle"
          }
        },
        "overridden": {
          "method_id": "152",
          "method_name": "__init__",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        }
      },
      {
        "method": {
          "id": "158",
          "name": "calculate_area",
          "class": {
            "id": "156",
            "name": "Circle"
          }
        },
        "overridden": {
          "method_id": "153",
          "method_name": "calculate_area",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        }
      },
      {
        "method": {
          "id": "159",
          "name": "draw",
          "class": {
            "id": "156",
            "name": "Circle"
          }
        },
        "overridden": {
          "method_id": "150",
          "method_name": "draw",
          "class": {
            "id": "149",
            "name": "Drawable"
          }
        }
      },
      {
        "method": {
          "id": "159",
          "name": "draw",
          "class": {
            "id": "156",
            "name": "Circle"
          }
        },
        "overridden": {
          "method_id": "154",
          "method_name": "draw",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        }
      },
      {
        "method": {
          "id": "161",
          "name": "__init__",
          "class": {
            "id": "160",
            "name": "Rectangle"
          }
        },
        "overridden": {
          "method_id": "152",
          "method_name": "__init__",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        }
      },
      {
        "method": {
          "id": "162",
          "name": "calculate_area",
          "class": {
            "id": "160",
            "name": "Rectangle"
          }
        },
        "overridden": {
          "method_id": "153",
          "method_name": "calculate_area",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        }
      },
      {
        "method": {
          "id": "163",
          "name": "draw",
          "class": {
            "id": "160",
            "name": "Rectangle"
          }
        },
        "overridden": {
          "method_id": "150",
          "method_name": "draw",
          "class": {
            "id": "149",
            "name": "Drawable"
          }
        }
      },
      {
        "method": {
          "id": "163",
          "name": "draw",
          "class": {
            "id": "160",
            "name": "Rectangle"
          }
        },
        "overridden": {
          "method_id": "154",
          "method_name": "draw",
          "class": {
            "id": "151",
            "name": "Shape"
          }
        }
      },
      {
        "method": {
          "id": "278",
          "name": "__init__",
          "class": {
            "id": "277",
            "name": "Parent"
          }
        },
        "overridden": {
          "method_id": "275",
          "method_name": "__init__",
          "class": {
            "id": "274",
            "name": "Grandparent"
          }
        }
      },
      {
        "method": {
          "id": "279",
          "name": "display",
          "class": {
            "id": "277",
            "name": "Parent"
          }
        },
        "overridden": {
          "method_id": "276",
          "method_name": "display",
          "class": {
            "id": "274",
            "name": "Grandparent"
          }
        }
      },
      {
        "method": {
          "id": "281",
          "name": "__init__",
          "class": {
            "id": "280",
            "name": "Child"
          }
        },
        "overridden": {
          "method_id": "275",
          "method_name": "__init__",
          "class": {
            "id": "274",
            "name": "Grandparent"
          }
        }
      },
      {
        "method": {
          "id": "281",
          "name": "__init__",
          "class": {
            "id": "280",
            "name": "Child"
          }
        },
        "overridden": {
          "method_id": "278",
          "method_name": "__init__",
          "class": {
            "id": "277",
            "name": "Parent"
          }
        }
      },
      {
        "method": {
          "id": "282",
          "name": "display",
          "class": {
            "id": "280",
            "name": "Child"
          }
        },
        "overridden": {
          "method_id": "276",
          "method_name": "display",
          "class": {
            "id": "274",
            "name": "Grandparent"
          }
        }
      },
      {
        "method": {
          "id": "282",
          "name": "display",
          "class": {
            "id": "280",
            "name": "Child"
          }
        },
        "overridden": {
          "method_id": "279",
          "method_name": "display",
          "class": {
            "id": "277",
            "name": "Parent"
          }
        }
      }
    ],
    "sibling_relationships": [
      {
        "class": {
          "id": "98",
          "name": "Car"
        },
        "sibling": {
          "id": "102",
          "name": "Motorcycle"
        },
        "common_parent": "Vehicle"
      },
      {
        "class": {
          "id": "102",
          "name": "Motorcycle"
        },
        "sibling": {
          "id": "98",
          "name": "Car"
        },
        "common_parent": "Vehicle"
      },
      {
        "class": {
          "id": "151",
          "name": "Shape"
        },
        "sibling": {
          "id": "174",
          "name": "ColoredRectangle"
        },
        "common_parent": "Drawable"
      },
      {
        "class": {
          "id": "156",
          "name": "Circle"
        },
        "sibling": {
          "id": "160",
          "name": "Rectangle"
        },
        "common_parent": "Shape"
      },
      {
        "class": {
          "id": "160",
          "name": "Rectangle"
        },
        "sibling": {
          "id": "156",
          "name": "Circle"
        },
        "common_parent": "Shape"
      },
      {
        "class": {
          "id": "174",
          "name": "ColoredRectangle"
        },
        "sibling": {
          "id": "151",
          "name": "Shape"
        },
        "common_parent": "Drawable"
      }
    ],
    "import_relationships": [
      {
        "module": {
          "id": "42",
          "name": "codebase_analyzer"
        },
        "import": {
          "id": "54",
          "name": "base_analyzer.BaseAnalyzer",
          "base_package": "base_analyzer",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "42",
          "name": "codebase_analyzer"
        },
        "import": {
          "id": "55",
          "name": "os",
          "base_package": "os",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "42",
          "name": "codebase_analyzer"
        },
        "import": {
          "id": "56",
          "name": "re",
          "base_package": "re",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "42",
          "name": "codebase_analyzer"
        },
        "import": {
          "id": "57",
          "name": "collections.defaultdict",
          "base_package": "collections",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "83",
          "name": "base_analyzer.BaseAnalyzer",
          "base_package": "base_analyzer",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "84",
          "name": "os",
          "base_package": "os",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "85",
          "name": "re",
          "base_package": "re",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "86",
          "name": "ast",
          "base_package": "ast",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "87",
          "name": "json",
          "base_package": "json",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "88",
          "name": "javalang",
          "base_package": "javalang",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "89",
          "name": "esprima",
          "base_package": "esprima",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "59",
          "name": "repository_analyzer"
        },
        "import": {
          "id": "90",
          "name": "xml.etree.ElementTree",
          "base_package": "xml",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "132",
          "name": "typing.List",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "133",
          "name": "typing.Dict",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "134",
          "name": "typing.Optional",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "135",
          "name": "typing.Union",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "136",
          "name": "typing.TypeVar",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "137",
          "name": "typing.Generic",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "138",
          "name": "abc.ABC",
          "base_package": "abc",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "139",
          "name": "abc.abstractmethod",
          "base_package": "abc",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "140",
          "name": "dataclasses.dataclass",
          "base_package": "dataclasses",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "92",
          "name": "gggggg"
        },
        "import": {
          "id": "141",
          "name": "datetime.datetime",
          "base_package": "datetime",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "143",
          "name": "classess"
        },
        "import": {
          "id": "187",
          "name": "abc.ABC",
          "base_package": "abc",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "143",
          "name": "classess"
        },
        "import": {
          "id": "188",
          "name": "abc.abstractmethod",
          "base_package": "abc",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "143",
          "name": "classess"
        },
        "import": {
          "id": "189",
          "name": "typing.List",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "143",
          "name": "classess"
        },
        "import": {
          "id": "190",
          "name": "typing.Optional",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "143",
          "name": "classess"
        },
        "import": {
          "id": "191",
          "name": "dataclasses.dataclass",
          "base_package": "dataclasses",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "193",
          "name": "prompt_loader"
        },
        "import": {
          "id": "264",
          "name": "toml",
          "base_package": "toml",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "193",
          "name": "prompt_loader"
        },
        "import": {
          "id": "265",
          "name": "pathlib.Path",
          "base_package": "pathlib",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "193",
          "name": "prompt_loader"
        },
        "import": {
          "id": "266",
          "name": "string.Template",
          "base_package": "string",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "193",
          "name": "prompt_loader"
        },
        "import": {
          "id": "267",
          "name": "typing.Dict",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "193",
          "name": "prompt_loader"
        },
        "import": {
          "id": "268",
          "name": "typing.Any",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "193",
          "name": "prompt_loader"
        },
        "import": {
          "id": "269",
          "name": "typing.Optional",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "380",
          "name": "litellm",
          "base_package": "litellm",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "381",
          "name": "yaml",
          "base_package": "yaml",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "382",
          "name": "re",
          "base_package": "re",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "383",
          "name": "os",
          "base_package": "os",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "384",
          "name": "xml.etree.ElementTree",
          "base_package": "xml",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "385",
          "name": "traceback",
          "base_package": "traceback",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "386",
          "name": "re",
          "base_package": "re",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "387",
          "name": "magic",
          "base_package": "magic",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "388",
          "name": "dotenv.load_dotenv",
          "base_package": "dotenv",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "468",
          "name": "py2neo.Graph",
          "base_package": "py2neo",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "469",
          "name": "py2neo.Node",
          "base_package": "py2neo",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "470",
          "name": "py2neo.Relationship",
          "base_package": "py2neo",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "471",
          "name": "os",
          "base_package": "os",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "472",
          "name": "typing.Dict",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "473",
          "name": "typing.Optional",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "474",
          "name": "typing.Any",
          "base_package": "typing",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "475",
          "name": "py2neo.errors.ClientError",
          "base_package": "py2neo",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "476",
          "name": "py2neo.errors.DatabaseError",
          "base_package": "py2neo",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "477",
          "name": "utils.prompt_loader.PromptLoader",
          "base_package": "utils",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "478",
          "name": "utils.codebase_analyzer.CodebaseAnalyzer",
          "base_package": "utils",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "479",
          "name": "utils.base_analyzer.BaseAnalyzer",
          "base_package": "utils",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "286",
          "name": "main"
        },
        "import": {
          "id": "480",
          "name": "utils.repository_analyzer.RepositoryAnalyzer",
          "base_package": "utils",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "482",
          "name": "base_analyzer"
        },
        "import": {
          "id": "13",
          "name": "os",
          "base_package": "os",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "482",
          "name": "base_analyzer"
        },
        "import": {
          "id": "14",
          "name": "sys",
          "base_package": "sys",
          "is_relative": false
        }
      },
      {
        "module": {
          "id": "482",
          "name": "base_analyzer"
        },
        "import": {
          "id": "15",
          "name": "datetime.datetime",
          "base_package": "datetime",
          "is_relative": false
        }
      }
    ]
  },
  "hierarchies": {
    "class_hierarchies": {
      "ColoredRectangle": {
        "ancestors": [
          "Drawable",
          "Shape",
          "Rectangle"
        ],
        "depth": 1
      },
      "Circle": {
        "ancestors": [
          "Drawable",
          "Shape"
        ],
        "depth": 1
      },
      "Rectangle": {
        "ancestors": [
          "Drawable",
          "Shape"
        ],
        "depth": 1
      },
      "Child": {
        "ancestors": [
          "Grandparent",
          "Parent"
        ],
        "depth": 1
      },
      "Car": {
        "ancestors": [
          "Vehicle"
        ],
        "depth": 1
      },
      "Motorcycle": {
        "ancestors": [
          "Vehicle"
        ],
        "depth": 1
      },
      "Shape": {
        "ancestors": [
          "Drawable"
        ],
        "depth": 1
      },
      "Parent": {
        "ancestors": [
          "Grandparent"
        ],
        "depth": 1
      }
    },
    "method_inheritance": {
      "__init__": {
        "base_class": "Parent",
        "inherited_by": {
          "classes": [
            "Child"
          ],
          "methods": [
            "__init__"
          ]
        }
      },
      "start_engine": {
        "base_class": "Vehicle",
        "inherited_by": {
          "classes": [
            "Car",
            "Motorcycle"
          ],
          "methods": [
            "start_engine"
          ]
        }
      },
      "draw": {
        "base_class": "Shape",
        "inherited_by": {
          "classes": [
            "Circle",
            "Rectangle"
          ],
          "methods": [
            "draw"
          ]
        }
      },
      "calculate_area": {
        "base_class": "Shape",
        "inherited_by": {
          "classes": [
            "Circle",
            "Rectangle"
          ],
          "methods": [
            "calculate_area"
          ]
        }
      },
      "display": {
        "base_class": "Parent",
        "inherited_by": {
          "classes": [
            "Child"
          ],
          "methods": [
            "display"
          ]
        }
      }
    }
  }
}