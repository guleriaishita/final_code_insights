Generated Documentation:
```python
"""
Module: Family Hierarchy

This module defines a simple family hierarchy consisting of three classes: 
Grandparent, Parent, and Child. Each class represents a level in the family tree 
and provides functionality to display the names of the family members in a 
structured manner.

Classes:
    - Grandparent
    - Parent
    - Child

Usage:
    To create instances of the family members and display their relationships, 
    instantiate the Child class, which will automatically handle the 
    initialization of Parent and Grandparent classes.

Example:
    grandchild = Child("Charlie", "Bob", "Alice")
    grandchild.display()
"""

class Grandparent:
    """
    Represents a grandparent in the family hierarchy.

    Attributes:
        name (str): The name of the grandparent.
    """

    def __init__(self, name: str):
        """
        Initializes a Grandparent instance.

        Parameters:
            name (str): The name of the grandparent.
        """
        self.name = name

    def display(self) -> None:
        """
        Displays the name of the grandparent.

        Returns:
            None
        """
        print(f"Grandparent: {self.name}")


class Parent(Grandparent):
    """
    Represents a parent in the family hierarchy, inheriting from Grandparent.

    Attributes:
        name (str): The name of the parent.
    """

    def __init__(self, name: str, parent_name: str):
        """
        Initializes a Parent instance.

        Parameters:
            name (str): The name of the parent.
            parent_name (str): The name of the grandparent.
        """
        super().__init__(parent_name)
        self.name = name

    def display(self) -> None:
        """
        Displays the names of the grandparent and the parent.

        Returns:
            None
        """
        super().display()
        print(f"Parent: {self.name}")


class Child(Parent):
    """
    Represents a child in the family hierarchy, inheriting from Parent.

    Attributes:
        name (str): The name of the child.
    """

    def __init__(self, name: str, parent_name: str, grandparent_name: str):
        """
        Initializes a Child instance.

        Parameters:
            name (str): The name of the child.
            parent_name (str): The name of the parent.
            grandparent_name (str): The name of the grandparent.
        """
        super().__init__(parent_name, grandparent_name)
        self.name = name

    def display(self) -> None:
        """
        Displays the names of the grandparent, parent, and the child.

        Returns:
            None
        """
        super().display()
        print(f"Child: {self.name}")


# Instantiate objects
grandchild = Child("Charlie", "Bob", "Alice")

# Display the relationship
grandchild.display()
```

### Comprehensive Code Summary
The provided code defines a family hierarchy with three classes: `Grandparent`, `Parent`, and `Child`. Each class has a constructor to initialize the names of the family members and a `display` method to print the names in a structured format. The `Child` class inherits from `Parent`, which in turn inherits from `Grandparent`, allowing for a clear representation of familial relationships.

### Tree Structure Overview
```
Family Hierarchy
├── Grandparent
│   ├── __init__(name: str)
│   └── display() -> None
├── Parent (inherits from Grandparent)
│   ├── __init__(name: str, parent_name: str)
│   └── display() -> None
└── Child (inherits from Parent)
    ├── __init__(name: str, parent_name: str, grandparent_name: str)
    └── display() -> None
```

### Detailed Component Descriptions

#### Classes
- **Grandparent**
  - Purpose: Represents a grandparent in the family hierarchy.
  - Methods:
    - `__init__(name: str)`: Initializes the grandparent's name.
    - `display() -> None`: Displays the grandparent's name.

- **Parent**
  - Purpose: Represents a parent in the family hierarchy, inheriting from `Grandparent`.
  - Methods:
    - `__init__(name: str, parent_name: str)`: Initializes the parent's name and calls the grandparent's constructor.
    - `display() -> None`: Displays the names of the grandparent and the parent.

- **Child**
  - Purpose: Represents a child in the family hierarchy, inheriting from `Parent`.
  - Methods:
    - `__init__(name: str, parent_name: str, grandparent_name: str)`: Initializes the child's name and calls the parent's constructor.
    - `display() -> None`: Displays the names of the grandparent, parent, and the child.

This documentation adheres to `Pydoc` conventions and provides a clear, structured overview of the code's functionality, class hierarchy, and method details.